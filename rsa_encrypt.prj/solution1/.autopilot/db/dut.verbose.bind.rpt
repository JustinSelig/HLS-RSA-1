

================================================================
== Vivado HLS Report for 'dut'
================================================================
* Date:           Wed Nov 29 21:20:33 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        rsa_encrypt.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     10.70|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+------+-----+------+---------+
    |   Latency  |  Interval  | Pipeline|
    | min |  max | min |  max |   Type  |
    +-----+------+-----+------+---------+
    |    4|  1351|    5|  1352|   none  |
    +-----+------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+------+----------+-----------+-----------+--------+----------+
        |          |   Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min |  max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+------+----------+-----------+-----------+--------+----------+
        |- L1      |    0|  1347|        77|         41|          1| 0 ~ 32 |    yes   |
        +----------+-----+------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 41, depth = 77


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 81
* Pipeline: 1
  Pipeline-0: II = 41, D = 77, States = { 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	81  / (tmp_i)
	5  / (!tmp_i)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	43  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	4  / true
81 --> 
* FSM state operations: 

 <State 1>: 4.38ns
ST_1: tmp_V [1/1] 0.00ns
:0  %tmp_V = alloca i32

ST_1: tmp_V_4 [1/1] 4.38ns
:6  %tmp_V_4 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %strm_in_V_V)

ST_1: stg_84 [1/1] 1.57ns
:9  store i32 1, i32* %tmp_V


 <State 2>: 4.38ns
ST_2: tmp_V_5 [1/1] 4.38ns
:7  %tmp_V_5 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %strm_in_V_V)


 <State 3>: 4.38ns
ST_3: empty [1/1] 0.00ns
:1  %empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %strm_out_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str17, [1 x i8]* @p_str18, [1 x i8]* @p_str19, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str20)

ST_3: empty_6 [1/1] 0.00ns
:2  %empty_6 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %strm_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str13, [1 x i8]* @p_str14, [1 x i8]* @p_str15, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str16)

ST_3: stg_88 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32* %strm_in_V_V), !map !65

ST_3: stg_89 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap(i32* %strm_out_V_V), !map !69

ST_3: stg_90 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dut_str) nounwind

ST_3: tmp_V_6 [1/1] 4.38ns
:8  %tmp_V_6 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %strm_in_V_V)

ST_3: stg_92 [1/1] 1.57ns
:10  br label %1


 <State 4>: 4.62ns
ST_4: p_i [1/1] 0.00ns
:0  %p_i = phi i32 [ %tmp_V_5, %0 ], [ %tmp, %._crit_edge.i ]

ST_4: x_pn_i [1/1] 0.00ns
:1  %x_pn_i = phi i32 [ %tmp_V_4, %0 ], [ %tmp_6_i, %._crit_edge.i ]

ST_4: tmp_i [1/1] 2.52ns
:2  %tmp_i = icmp eq i32 %p_i, 0

ST_4: stg_96 [1/1] 0.00ns
:3  br i1 %tmp_i, label %power2.exit, label %2

ST_4: tmp_1 [1/1] 0.00ns
:0  %tmp_1 = trunc i32 %p_i to i1

ST_4: x_assign_1 [36/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6

ST_4: stg_99 [1/1] 0.00ns
:6  br i1 %tmp_1, label %3, label %._crit_edge.i

ST_4: y_assign_1 [1/1] 0.00ns
._crit_edge.i:0  %y_assign_1 = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_i, i32 1, i32 31)

ST_4: tmp [1/1] 0.00ns
._crit_edge.i:1  %tmp = zext i31 %y_assign_1 to i32


 <State 5>: 4.62ns
ST_5: x_assign_1 [35/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 6>: 4.62ns
ST_6: x_assign_1 [34/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 7>: 4.62ns
ST_7: x_assign_1 [33/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 8>: 4.62ns
ST_8: x_assign_1 [32/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 9>: 4.62ns
ST_9: x_assign_1 [31/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 10>: 4.62ns
ST_10: x_assign_1 [30/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 11>: 4.62ns
ST_11: x_assign_1 [29/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 12>: 4.62ns
ST_12: x_assign_1 [28/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 13>: 4.62ns
ST_13: x_assign_1 [27/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 14>: 4.62ns
ST_14: x_assign_1 [26/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 15>: 4.62ns
ST_15: x_assign_1 [25/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 16>: 4.62ns
ST_16: x_assign_1 [24/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 17>: 4.62ns
ST_17: x_assign_1 [23/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 18>: 4.62ns
ST_18: x_assign_1 [22/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 19>: 4.62ns
ST_19: x_assign_1 [21/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 20>: 4.62ns
ST_20: x_assign_1 [20/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 21>: 4.62ns
ST_21: x_assign_1 [19/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 22>: 4.62ns
ST_22: x_assign_1 [18/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 23>: 4.62ns
ST_23: x_assign_1 [17/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 24>: 4.62ns
ST_24: x_assign_1 [16/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 25>: 4.62ns
ST_25: x_assign_1 [15/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 26>: 4.62ns
ST_26: x_assign_1 [14/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 27>: 4.62ns
ST_27: x_assign_1 [13/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 28>: 4.62ns
ST_28: x_assign_1 [12/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 29>: 4.62ns
ST_29: x_assign_1 [11/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 30>: 4.62ns
ST_30: x_assign_1 [10/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 31>: 4.62ns
ST_31: x_assign_1 [9/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 32>: 4.62ns
ST_32: x_assign_1 [8/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 33>: 4.62ns
ST_33: x_assign_1 [7/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 34>: 4.62ns
ST_34: x_assign_1 [6/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 35>: 4.62ns
ST_35: x_assign_1 [5/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 36>: 4.62ns
ST_36: x_assign_1 [4/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 37>: 4.62ns
ST_37: x_assign_1 [3/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 38>: 4.62ns
ST_38: x_assign_1 [2/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6


 <State 39>: 10.70ns
ST_39: x_assign_1 [1/36] 4.62ns
:1  %x_assign_1 = urem i32 %x_pn_i, %tmp_V_6

ST_39: tmp_6_i [6/6] 6.08ns
._crit_edge.i:2  %tmp_6_i = mul i32 %x_assign_1, %x_assign_1


 <State 40>: 6.08ns
ST_40: tmp_V_load_1 [1/1] 0.00ns
:0  %tmp_V_load_1 = load i32* %tmp_V

ST_40: tmp_3_i [6/6] 6.08ns
:1  %tmp_3_i = mul i32 %x_assign_1, %tmp_V_load_1

ST_40: tmp_6_i [5/6] 6.08ns
._crit_edge.i:2  %tmp_6_i = mul i32 %x_assign_1, %x_assign_1


 <State 41>: 6.08ns
ST_41: tmp_3_i [5/6] 6.08ns
:1  %tmp_3_i = mul i32 %x_assign_1, %tmp_V_load_1

ST_41: tmp_6_i [4/6] 6.08ns
._crit_edge.i:2  %tmp_6_i = mul i32 %x_assign_1, %x_assign_1


 <State 42>: 6.08ns
ST_42: tmp_3_i [4/6] 6.08ns
:1  %tmp_3_i = mul i32 %x_assign_1, %tmp_V_load_1

ST_42: tmp_6_i [3/6] 6.08ns
._crit_edge.i:2  %tmp_6_i = mul i32 %x_assign_1, %x_assign_1


 <State 43>: 6.08ns
ST_43: tmp_3_i [3/6] 6.08ns
:1  %tmp_3_i = mul i32 %x_assign_1, %tmp_V_load_1

ST_43: tmp_6_i [2/6] 6.08ns
._crit_edge.i:2  %tmp_6_i = mul i32 %x_assign_1, %x_assign_1


 <State 44>: 6.08ns
ST_44: tmp_3_i [2/6] 6.08ns
:1  %tmp_3_i = mul i32 %x_assign_1, %tmp_V_load_1

ST_44: tmp_6_i [1/6] 6.08ns
._crit_edge.i:2  %tmp_6_i = mul i32 %x_assign_1, %x_assign_1


 <State 45>: 10.70ns
ST_45: tmp_3_i [1/6] 6.08ns
:1  %tmp_3_i = mul i32 %x_assign_1, %tmp_V_load_1

ST_45: res [36/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 46>: 4.62ns
ST_46: res [35/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 47>: 4.62ns
ST_47: res [34/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 48>: 4.62ns
ST_48: res [33/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 49>: 4.62ns
ST_49: res [32/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 50>: 4.62ns
ST_50: res [31/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 51>: 4.62ns
ST_51: res [30/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 52>: 4.62ns
ST_52: res [29/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 53>: 4.62ns
ST_53: res [28/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 54>: 4.62ns
ST_54: res [27/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 55>: 4.62ns
ST_55: res [26/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 56>: 4.62ns
ST_56: res [25/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 57>: 4.62ns
ST_57: res [24/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 58>: 4.62ns
ST_58: res [23/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 59>: 4.62ns
ST_59: res [22/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 60>: 4.62ns
ST_60: res [21/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 61>: 4.62ns
ST_61: res [20/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 62>: 4.62ns
ST_62: res [19/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 63>: 4.62ns
ST_63: res [18/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 64>: 4.62ns
ST_64: res [17/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 65>: 4.62ns
ST_65: res [16/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 66>: 4.62ns
ST_66: res [15/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 67>: 4.62ns
ST_67: res [14/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 68>: 4.62ns
ST_68: res [13/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 69>: 4.62ns
ST_69: res [12/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 70>: 4.62ns
ST_70: res [11/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 71>: 4.62ns
ST_71: res [10/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 72>: 4.62ns
ST_72: res [9/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 73>: 4.62ns
ST_73: res [8/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 74>: 4.62ns
ST_74: res [7/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 75>: 4.62ns
ST_75: res [6/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 76>: 4.62ns
ST_76: res [5/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 77>: 4.62ns
ST_77: res [4/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 78>: 4.62ns
ST_78: res [3/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 79>: 4.62ns
ST_79: res [2/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6


 <State 80>: 6.19ns
ST_80: stg_185 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopName([3 x i8]* @p_str) nounwind

ST_80: tmp_4_i [1/1] 0.00ns
:3  %tmp_4_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([3 x i8]* @p_str) nounwind

ST_80: stg_187 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 32, i32 16, [1 x i8]* @p_str1) nounwind

ST_80: stg_188 [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind

ST_80: res [1/36] 4.62ns
:2  %res = urem i32 %tmp_3_i, %tmp_V_6

ST_80: stg_190 [1/1] 1.57ns
:3  store i32 %res, i32* %tmp_V

ST_80: stg_191 [1/1] 0.00ns
:4  br label %._crit_edge.i

ST_80: empty_7 [1/1] 0.00ns
._crit_edge.i:3  %empty_7 = call i32 (...)* @_ssdm_op_SpecRegionEnd([3 x i8]* @p_str, i32 %tmp_4_i) nounwind

ST_80: stg_193 [1/1] 0.00ns
._crit_edge.i:4  br label %1


 <State 81>: 4.38ns
ST_81: tmp_V_load [1/1] 0.00ns
power2.exit:0  %tmp_V_load = load i32* %tmp_V

ST_81: stg_195 [1/1] 4.38ns
power2.exit:1  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %strm_out_V_V, i32 %tmp_V_load)

ST_81: stg_196 [1/1] 0.00ns
power2.exit:2  ret void



============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is clock enabled: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ strm_in_V_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
Port [ strm_out_V_V]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=3; pingpong=0; private_global=0; IO mode=ap_fifo:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
tmp_V        (alloca           ) [ 0111111111111111111111111111111111111111111111111111111111111111111111111111111111]
tmp_V_4      (read             ) [ 0011111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_84       (store            ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_V_5      (read             ) [ 0001111111111111111111111111111111111111111111111111111111111111111111111111111110]
empty        (specinterface    ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_6      (specinterface    ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_88       (specbitsmap      ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_89       (specbitsmap      ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_90       (spectopmodule    ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_V_6      (read             ) [ 0000111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_92       (br               ) [ 0001111111111111111111111111111111111111111111111111111111111111111111111111111110]
p_i          (phi              ) [ 0000100000000000000000000000000000000000000000000000000000000000000000000000000000]
x_pn_i       (phi              ) [ 0000111111111111111111111111111111111111000000000000000000000000000000000000000000]
tmp_i        (icmp             ) [ 0000111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_96       (br               ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_1        (trunc            ) [ 0000111111111111111111111111111111111111111111111111111111111111111111111111111110]
stg_99       (br               ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
y_assign_1   (partselect       ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp          (zext             ) [ 0001111111111111111111111111111111111111111111111111111111111111111111111111111110]
x_assign_1   (urem             ) [ 0000100000000000000000000000000000000000111111000000000000000000000000000000000000]
tmp_V_load_1 (load             ) [ 0000100000000000000000000000000000000000011111000000000000000000000000000000000000]
tmp_6_i      (mul              ) [ 0001111111111111111111111111111111111111000001111111111111111111111111111111111110]
tmp_3_i      (mul              ) [ 0000011111111111111111111111111111111111000000111111111111111111111111111111111110]
stg_185      (specloopname     ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
tmp_4_i      (specregionbegin  ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_187      (speclooptripcount) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_188      (specpipeline     ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
res          (urem             ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_190      (store            ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_191      (br               ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
empty_7      (specregionend    ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_193      (br               ) [ 0001111111111111111111111111111111111111111111111111111111111111111111111111111110]
tmp_V_load   (load             ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_195      (write            ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
stg_196      (ret              ) [ 0000000000000000000000000000000000000000000000000000000000000000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="strm_in_V_V">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="strm_in_V_V"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="strm_out_V_V">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="strm_out_V_V"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_fifo.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="ap_fifo_str"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str17"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str18"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str19"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str20"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str13"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str14"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str15"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str16"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="dut_str"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_PartSelect.i31.i32.i32.i32"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_fifo.volatile.i32P"/></StgValue>
</bind>
</comp>

<comp id="64" class="1004" name="tmp_V_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="1" slack="0"/>
<pin id="66" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="tmp_V/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="grp_read_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="32" slack="0"/>
<pin id="70" dir="0" index="1" bw="32" slack="0"/>
<pin id="71" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="tmp_V_4/1 tmp_V_5/2 tmp_V_6/3 "/>
</bind>
</comp>

<comp id="74" class="1004" name="stg_195_write_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="0" slack="0"/>
<pin id="76" dir="0" index="1" bw="32" slack="0"/>
<pin id="77" dir="0" index="2" bw="32" slack="0"/>
<pin id="78" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="stg_195/81 "/>
</bind>
</comp>

<comp id="81" class="1005" name="p_i_reg_81">
<pin_list>
<pin id="82" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="83" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opset="p_i (phireg) "/>
</bind>
</comp>

<comp id="84" class="1004" name="p_i_phi_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="32" slack="2"/>
<pin id="86" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="87" dir="0" index="2" bw="31" slack="0"/>
<pin id="88" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="89" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="p_i/4 "/>
</bind>
</comp>

<comp id="90" class="1005" name="x_pn_i_reg_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="32" slack="1"/>
<pin id="92" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opset="x_pn_i (phireg) "/>
</bind>
</comp>

<comp id="93" class="1004" name="x_pn_i_phi_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="32" slack="3"/>
<pin id="95" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="96" dir="0" index="2" bw="32" slack="1"/>
<pin id="97" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="98" dir="1" index="4" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="x_pn_i/4 "/>
</bind>
</comp>

<comp id="100" class="1004" name="grp_load_fu_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="32" slack="4"/>
<pin id="102" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) " fcode="load"/>
<opset="tmp_V_load_1/40 tmp_V_load/81 "/>
</bind>
</comp>

<comp id="104" class="1004" name="stg_84_store_fu_104">
<pin_list>
<pin id="105" dir="0" index="0" bw="1" slack="0"/>
<pin id="106" dir="0" index="1" bw="32" slack="0"/>
<pin id="107" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_84/1 "/>
</bind>
</comp>

<comp id="109" class="1004" name="tmp_i_fu_109">
<pin_list>
<pin id="110" dir="0" index="0" bw="32" slack="0"/>
<pin id="111" dir="0" index="1" bw="1" slack="0"/>
<pin id="112" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="tmp_i/4 "/>
</bind>
</comp>

<comp id="115" class="1004" name="tmp_1_fu_115">
<pin_list>
<pin id="116" dir="0" index="0" bw="32" slack="0"/>
<pin id="117" dir="1" index="1" bw="1" slack="36"/>
</pin_list>
<bind>
<opcode="trunc(33) " fcode="trunc"/>
<opset="tmp_1/4 "/>
</bind>
</comp>

<comp id="119" class="1004" name="grp_fu_119">
<pin_list>
<pin id="120" dir="0" index="0" bw="32" slack="0"/>
<pin id="121" dir="0" index="1" bw="32" slack="1"/>
<pin id="122" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="urem(17) " fcode="urem"/>
<opset="x_assign_1/4 "/>
</bind>
</comp>

<comp id="124" class="1004" name="y_assign_1_fu_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="31" slack="0"/>
<pin id="126" dir="0" index="1" bw="32" slack="0"/>
<pin id="127" dir="0" index="2" bw="1" slack="0"/>
<pin id="128" dir="0" index="3" bw="6" slack="0"/>
<pin id="129" dir="1" index="4" bw="31" slack="0"/>
</pin_list>
<bind>
<opcode="partselect(1002) " fcode="partselect"/>
<opset="y_assign_1/4 "/>
</bind>
</comp>

<comp id="134" class="1004" name="tmp_fu_134">
<pin_list>
<pin id="135" dir="0" index="0" bw="31" slack="0"/>
<pin id="136" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp/4 "/>
</bind>
</comp>

<comp id="138" class="1004" name="grp_fu_138">
<pin_list>
<pin id="139" dir="0" index="0" bw="32" slack="0"/>
<pin id="140" dir="0" index="1" bw="32" slack="0"/>
<pin id="141" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="tmp_6_i/39 "/>
</bind>
</comp>

<comp id="144" class="1004" name="grp_fu_144">
<pin_list>
<pin id="145" dir="0" index="0" bw="32" slack="1"/>
<pin id="146" dir="0" index="1" bw="32" slack="0"/>
<pin id="147" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="mul(12) " fcode="mul"/>
<opset="tmp_3_i/40 "/>
</bind>
</comp>

<comp id="149" class="1004" name="grp_fu_149">
<pin_list>
<pin id="150" dir="0" index="0" bw="32" slack="0"/>
<pin id="151" dir="0" index="1" bw="32" slack="42"/>
<pin id="152" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="urem(17) " fcode="urem"/>
<opset="res/45 "/>
</bind>
</comp>

<comp id="154" class="1004" name="stg_190_store_fu_154">
<pin_list>
<pin id="155" dir="0" index="0" bw="32" slack="0"/>
<pin id="156" dir="0" index="1" bw="32" slack="79"/>
<pin id="157" dir="1" index="2" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="store(28) " fcode="store"/>
<opset="stg_190/80 "/>
</bind>
</comp>

<comp id="159" class="1005" name="tmp_V_reg_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="32" slack="0"/>
<pin id="161" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="tmp_V "/>
</bind>
</comp>

<comp id="166" class="1005" name="tmp_V_4_reg_166">
<pin_list>
<pin id="167" dir="0" index="0" bw="32" slack="3"/>
<pin id="168" dir="1" index="1" bw="32" slack="3"/>
</pin_list>
<bind>
<opset="tmp_V_4 "/>
</bind>
</comp>

<comp id="171" class="1005" name="tmp_V_5_reg_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="32" slack="2"/>
<pin id="173" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="tmp_V_5 "/>
</bind>
</comp>

<comp id="176" class="1005" name="tmp_V_6_reg_176">
<pin_list>
<pin id="177" dir="0" index="0" bw="32" slack="1"/>
<pin id="178" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_V_6 "/>
</bind>
</comp>

<comp id="182" class="1005" name="tmp_i_reg_182">
<pin_list>
<pin id="183" dir="0" index="0" bw="1" slack="1"/>
<pin id="184" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_i "/>
</bind>
</comp>

<comp id="186" class="1005" name="tmp_1_reg_186">
<pin_list>
<pin id="187" dir="0" index="0" bw="1" slack="36"/>
<pin id="188" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="tmp_1 "/>
</bind>
</comp>

<comp id="190" class="1005" name="tmp_reg_190">
<pin_list>
<pin id="191" dir="0" index="0" bw="32" slack="0"/>
<pin id="192" dir="1" index="1" bw="32" slack="0"/>
</pin_list>
<bind>
<opset="tmp "/>
</bind>
</comp>

<comp id="195" class="1005" name="x_assign_1_reg_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="32" slack="1"/>
<pin id="197" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="x_assign_1 "/>
</bind>
</comp>

<comp id="202" class="1005" name="tmp_V_load_1_reg_202">
<pin_list>
<pin id="203" dir="0" index="0" bw="32" slack="1"/>
<pin id="204" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_V_load_1 "/>
</bind>
</comp>

<comp id="207" class="1005" name="tmp_6_i_reg_207">
<pin_list>
<pin id="208" dir="0" index="0" bw="32" slack="1"/>
<pin id="209" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_6_i "/>
</bind>
</comp>

<comp id="212" class="1005" name="tmp_3_i_reg_212">
<pin_list>
<pin id="213" dir="0" index="0" bw="32" slack="1"/>
<pin id="214" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="tmp_3_i "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="67"><net_src comp="4" pin="0"/><net_sink comp="64" pin=0"/></net>

<net id="72"><net_src comp="6" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="73"><net_src comp="0" pin="0"/><net_sink comp="68" pin=1"/></net>

<net id="79"><net_src comp="62" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="80"><net_src comp="2" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="99"><net_src comp="93" pin="4"/><net_sink comp="90" pin=0"/></net>

<net id="103"><net_src comp="100" pin="1"/><net_sink comp="74" pin=2"/></net>

<net id="108"><net_src comp="4" pin="0"/><net_sink comp="104" pin=0"/></net>

<net id="113"><net_src comp="84" pin="4"/><net_sink comp="109" pin=0"/></net>

<net id="114"><net_src comp="12" pin="0"/><net_sink comp="109" pin=1"/></net>

<net id="118"><net_src comp="84" pin="4"/><net_sink comp="115" pin=0"/></net>

<net id="123"><net_src comp="93" pin="4"/><net_sink comp="119" pin=0"/></net>

<net id="130"><net_src comp="40" pin="0"/><net_sink comp="124" pin=0"/></net>

<net id="131"><net_src comp="84" pin="4"/><net_sink comp="124" pin=1"/></net>

<net id="132"><net_src comp="4" pin="0"/><net_sink comp="124" pin=2"/></net>

<net id="133"><net_src comp="42" pin="0"/><net_sink comp="124" pin=3"/></net>

<net id="137"><net_src comp="124" pin="4"/><net_sink comp="134" pin=0"/></net>

<net id="142"><net_src comp="119" pin="2"/><net_sink comp="138" pin=0"/></net>

<net id="143"><net_src comp="119" pin="2"/><net_sink comp="138" pin=1"/></net>

<net id="148"><net_src comp="100" pin="1"/><net_sink comp="144" pin=1"/></net>

<net id="153"><net_src comp="144" pin="2"/><net_sink comp="149" pin=0"/></net>

<net id="158"><net_src comp="149" pin="2"/><net_sink comp="154" pin=0"/></net>

<net id="162"><net_src comp="64" pin="1"/><net_sink comp="159" pin=0"/></net>

<net id="163"><net_src comp="159" pin="1"/><net_sink comp="104" pin=1"/></net>

<net id="164"><net_src comp="159" pin="1"/><net_sink comp="100" pin=0"/></net>

<net id="165"><net_src comp="159" pin="1"/><net_sink comp="154" pin=1"/></net>

<net id="169"><net_src comp="68" pin="2"/><net_sink comp="166" pin=0"/></net>

<net id="170"><net_src comp="166" pin="1"/><net_sink comp="93" pin=0"/></net>

<net id="174"><net_src comp="68" pin="2"/><net_sink comp="171" pin=0"/></net>

<net id="175"><net_src comp="171" pin="1"/><net_sink comp="84" pin=0"/></net>

<net id="179"><net_src comp="68" pin="2"/><net_sink comp="176" pin=0"/></net>

<net id="180"><net_src comp="176" pin="1"/><net_sink comp="119" pin=1"/></net>

<net id="181"><net_src comp="176" pin="1"/><net_sink comp="149" pin=1"/></net>

<net id="185"><net_src comp="109" pin="2"/><net_sink comp="182" pin=0"/></net>

<net id="189"><net_src comp="115" pin="1"/><net_sink comp="186" pin=0"/></net>

<net id="193"><net_src comp="134" pin="1"/><net_sink comp="190" pin=0"/></net>

<net id="194"><net_src comp="190" pin="1"/><net_sink comp="84" pin=2"/></net>

<net id="198"><net_src comp="119" pin="2"/><net_sink comp="195" pin=0"/></net>

<net id="199"><net_src comp="195" pin="1"/><net_sink comp="144" pin=0"/></net>

<net id="200"><net_src comp="195" pin="1"/><net_sink comp="138" pin=0"/></net>

<net id="201"><net_src comp="195" pin="1"/><net_sink comp="138" pin=1"/></net>

<net id="205"><net_src comp="100" pin="1"/><net_sink comp="202" pin=0"/></net>

<net id="206"><net_src comp="202" pin="1"/><net_sink comp="144" pin=1"/></net>

<net id="210"><net_src comp="138" pin="2"/><net_sink comp="207" pin=0"/></net>

<net id="211"><net_src comp="207" pin="1"/><net_sink comp="93" pin=2"/></net>

<net id="215"><net_src comp="144" pin="2"/><net_sink comp="212" pin=0"/></net>

<net id="216"><net_src comp="212" pin="1"/><net_sink comp="149" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: strm_out_V_V | {81 }
 - Input state : 
	Port: dut : strm_in_V_V | {1 2 3 }
  - Chain level:
	State 1
		stg_84 : 1
	State 2
	State 3
	State 4
		tmp_i : 1
		stg_96 : 2
		tmp_1 : 1
		x_assign_1 : 1
		stg_99 : 2
		y_assign_1 : 1
		tmp : 2
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
		tmp_6_i : 1
	State 40
		tmp_3_i : 1
	State 41
	State 42
	State 43
	State 44
	State 45
		res : 1
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
		stg_190 : 1
		empty_7 : 1
	State 81
		stg_195 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------|---------|---------|---------|
| Operation|   Functional Unit   |  DSP48E |    FF   |   LUT   |
|----------|---------------------|---------|---------|---------|
|   urem   |      grp_fu_119     |    0    |   2000  |   2000  |
|          |      grp_fu_149     |    0    |   2000  |   2000  |
|----------|---------------------|---------|---------|---------|
|   icmp   |     tmp_i_fu_109    |    0    |    0    |    11   |
|----------|---------------------|---------|---------|---------|
|    mul   |      grp_fu_138     |    4    |    0    |    0    |
|          |      grp_fu_144     |    4    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   read   |    grp_read_fu_68   |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   write  | stg_195_write_fu_74 |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   trunc  |     tmp_1_fu_115    |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|partselect|  y_assign_1_fu_124  |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   zext   |      tmp_fu_134     |    0    |    0    |    0    |
|----------|---------------------|---------|---------|---------|
|   Total  |                     |    8    |   4000  |   4011  |
|----------|---------------------|---------|---------|---------|

Memories:
N/A

* Register list:
+--------------------+--------+
|                    |   FF   |
+--------------------+--------+
|     p_i_reg_81     |   32   |
|    tmp_1_reg_186   |    1   |
|   tmp_3_i_reg_212  |   32   |
|   tmp_6_i_reg_207  |   32   |
|   tmp_V_4_reg_166  |   32   |
|   tmp_V_5_reg_171  |   32   |
|   tmp_V_6_reg_176  |   32   |
|tmp_V_load_1_reg_202|   32   |
|    tmp_V_reg_159   |   32   |
|    tmp_i_reg_182   |    1   |
|     tmp_reg_190    |   32   |
| x_assign_1_reg_195 |   32   |
|    x_pn_i_reg_90   |   32   |
+--------------------+--------+
|        Total       |   354  |
+--------------------+--------+

* Multiplexer (MUX) list: 
|------------|------|------|------|--------||---------||---------|
|    Comp    |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------|------|------|------|--------||---------||---------|
| grp_fu_138 |  p0  |   2  |  32  |   64   ||    32   |
| grp_fu_138 |  p1  |   2  |  32  |   64   ||    32   |
| grp_fu_144 |  p1  |   2  |  32  |   64   ||    32   |
| grp_fu_149 |  p0  |   2  |  32  |   64   ||    32   |
|------------|------|------|------|--------||---------||---------|
|    Total   |      |      |      |   256  ||  6.284  ||   128   |
|------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           | DSP48E |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    8   |    -   |  4000  |  4011  |
|   Memory  |    -   |    -   |    -   |    -   |
|Multiplexer|    -   |    6   |    -   |   128  |
|  Register |    -   |    -   |   354  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    8   |    6   |  4354  |  4139  |
+-----------+--------+--------+--------+--------+
