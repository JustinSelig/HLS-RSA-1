// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.702000,HLS_SYN_LAT=695,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=8,HLS_SYN_FF=4337,HLS_SYN_LUT=4252}" *)

module dut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_V_dout,
        strm_in_V_V_empty_n,
        strm_in_V_V_read,
        strm_out_V_V_din,
        strm_out_V_V_full_n,
        strm_out_V_V_write
);

parameter    ap_ST_st1_fsm_0 = 45'b1;
parameter    ap_ST_st2_fsm_1 = 45'b10;
parameter    ap_ST_st3_fsm_2 = 45'b100;
parameter    ap_ST_pp0_stg0_fsm_3 = 45'b1000;
parameter    ap_ST_pp0_stg1_fsm_4 = 45'b10000;
parameter    ap_ST_pp0_stg2_fsm_5 = 45'b100000;
parameter    ap_ST_pp0_stg3_fsm_6 = 45'b1000000;
parameter    ap_ST_pp0_stg4_fsm_7 = 45'b10000000;
parameter    ap_ST_pp0_stg5_fsm_8 = 45'b100000000;
parameter    ap_ST_pp0_stg6_fsm_9 = 45'b1000000000;
parameter    ap_ST_pp0_stg7_fsm_10 = 45'b10000000000;
parameter    ap_ST_pp0_stg8_fsm_11 = 45'b100000000000;
parameter    ap_ST_pp0_stg9_fsm_12 = 45'b1000000000000;
parameter    ap_ST_pp0_stg10_fsm_13 = 45'b10000000000000;
parameter    ap_ST_pp0_stg11_fsm_14 = 45'b100000000000000;
parameter    ap_ST_pp0_stg12_fsm_15 = 45'b1000000000000000;
parameter    ap_ST_pp0_stg13_fsm_16 = 45'b10000000000000000;
parameter    ap_ST_pp0_stg14_fsm_17 = 45'b100000000000000000;
parameter    ap_ST_pp0_stg15_fsm_18 = 45'b1000000000000000000;
parameter    ap_ST_pp0_stg16_fsm_19 = 45'b10000000000000000000;
parameter    ap_ST_pp0_stg17_fsm_20 = 45'b100000000000000000000;
parameter    ap_ST_pp0_stg18_fsm_21 = 45'b1000000000000000000000;
parameter    ap_ST_pp0_stg19_fsm_22 = 45'b10000000000000000000000;
parameter    ap_ST_pp0_stg20_fsm_23 = 45'b100000000000000000000000;
parameter    ap_ST_pp0_stg21_fsm_24 = 45'b1000000000000000000000000;
parameter    ap_ST_pp0_stg22_fsm_25 = 45'b10000000000000000000000000;
parameter    ap_ST_pp0_stg23_fsm_26 = 45'b100000000000000000000000000;
parameter    ap_ST_pp0_stg24_fsm_27 = 45'b1000000000000000000000000000;
parameter    ap_ST_pp0_stg25_fsm_28 = 45'b10000000000000000000000000000;
parameter    ap_ST_pp0_stg26_fsm_29 = 45'b100000000000000000000000000000;
parameter    ap_ST_pp0_stg27_fsm_30 = 45'b1000000000000000000000000000000;
parameter    ap_ST_pp0_stg28_fsm_31 = 45'b10000000000000000000000000000000;
parameter    ap_ST_pp0_stg29_fsm_32 = 45'b100000000000000000000000000000000;
parameter    ap_ST_pp0_stg30_fsm_33 = 45'b1000000000000000000000000000000000;
parameter    ap_ST_pp0_stg31_fsm_34 = 45'b10000000000000000000000000000000000;
parameter    ap_ST_pp0_stg32_fsm_35 = 45'b100000000000000000000000000000000000;
parameter    ap_ST_pp0_stg33_fsm_36 = 45'b1000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg34_fsm_37 = 45'b10000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg35_fsm_38 = 45'b100000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg36_fsm_39 = 45'b1000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg37_fsm_40 = 45'b10000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg38_fsm_41 = 45'b100000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg39_fsm_42 = 45'b1000000000000000000000000000000000000000000;
parameter    ap_ST_pp0_stg40_fsm_43 = 45'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_44 = 45'b100000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_1F = 32'b11111;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_V_dout;
input   strm_in_V_V_empty_n;
output   strm_in_V_V_read;
output  [31:0] strm_out_V_V_din;
input   strm_out_V_V_full_n;
output   strm_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_V_read;
reg strm_out_V_V_write;

(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_60;
reg    strm_in_V_V_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_84;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_92;
reg    strm_out_V_V_blk_n;
reg    ap_sig_cseq_ST_st81_fsm_44;
reg    ap_sig_101;
reg   [31:0] p_i_reg_81;
reg   [31:0] x_pn_i_reg_90;
reg   [31:0] tmp_V_4_reg_166;
reg    ap_sig_111;
reg   [31:0] tmp_V_5_reg_171;
reg   [31:0] tmp_V_6_reg_176;
wire   [0:0] tmp_i_fu_109_p2;
reg   [0:0] tmp_i_reg_182;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_3;
reg    ap_sig_126;
reg    ap_reg_ppiten_pp0_it0;
reg    ap_reg_ppiten_pp0_it1;
wire   [0:0] tmp_1_fu_115_p1;
reg   [0:0] tmp_1_reg_186;
reg   [0:0] ap_reg_ppstg_tmp_1_reg_186_pp0_iter1;
wire   [31:0] tmp_fu_134_p1;
reg   [31:0] tmp_reg_190;
wire  signed [31:0] grp_fu_119_p2;
reg  signed [31:0] x_assign_1_reg_195;
reg    ap_sig_cseq_ST_pp0_stg35_fsm_38;
reg    ap_sig_152;
reg    ap_sig_cseq_ST_pp0_stg36_fsm_39;
reg    ap_sig_163;
wire   [31:0] grp_fu_138_p2;
reg   [31:0] tmp_6_i_reg_207;
reg    ap_sig_cseq_ST_pp0_stg40_fsm_43;
reg    ap_sig_177;
wire   [31:0] grp_fu_144_p2;
reg   [31:0] p_i_phi_fu_84_p4;
reg   [31:0] x_pn_i_phi_fu_93_p4;
reg  signed [31:0] tmp_V_fu_64;
wire   [31:0] grp_fu_149_p2;
wire   [30:0] y_assign_1_fu_124_p4;
reg   [44:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 45'b1;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
end

dut_urem_32ns_32ns_32_36 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_urem_32ns_32ns_32_36_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_pn_i_phi_fu_93_p4),
    .din1(tmp_V_6_reg_176),
    .ce(1'b1),
    .dout(grp_fu_119_p2)
);

dut_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_mul_32s_32s_32_6_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_119_p2),
    .din1(grp_fu_119_p2),
    .ce(1'b1),
    .dout(grp_fu_138_p2)
);

dut_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_mul_32s_32s_32_6_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x_assign_1_reg_195),
    .din1(tmp_V_fu_64),
    .ce(1'b1),
    .dout(grp_fu_144_p2)
);

dut_urem_32ns_32ns_32_36 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_urem_32ns_32ns_32_36_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_144_p2),
    .din1(tmp_V_6_reg_176),
    .ce(1'b1),
    .dout(grp_fu_149_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & ~(tmp_i_fu_109_p2 == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((tmp_i_reg_182 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg40_fsm_43))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg40_fsm_43) & ~(tmp_i_reg_182 == 1'b0)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (tmp_i_reg_182 == 1'b0))) begin
        p_i_reg_81 <= tmp_reg_190;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0))) begin
        p_i_reg_81 <= tmp_V_5_reg_171;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg35_fsm_38) & ~(1'b0 == ap_reg_ppstg_tmp_1_reg_186_pp0_iter1))) begin
        tmp_V_fu_64 <= grp_fu_149_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_111)) begin
        tmp_V_fu_64 <= ap_const_lv32_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (tmp_i_reg_182 == 1'b0))) begin
        x_pn_i_reg_90 <= tmp_6_i_reg_207;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0))) begin
        x_pn_i_reg_90 <= tmp_V_4_reg_166;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3)) begin
        ap_reg_ppstg_tmp_1_reg_186_pp0_iter1 <= tmp_1_reg_186;
        tmp_i_reg_182 <= tmp_i_fu_109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (tmp_i_fu_109_p2 == 1'b0))) begin
        tmp_1_reg_186 <= tmp_1_fu_115_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_reg_ppiten_pp0_it0) & (tmp_i_reg_182 == 1'b0) & (1'b1 == ap_sig_cseq_ST_pp0_stg40_fsm_43))) begin
        tmp_6_i_reg_207 <= grp_fu_138_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_111)) begin
        tmp_V_4_reg_166 <= strm_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(strm_in_V_V_empty_n == 1'b0))) begin
        tmp_V_5_reg_171 <= strm_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0))) begin
        tmp_V_6_reg_176 <= strm_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it0) & (tmp_i_fu_109_p2 == 1'b0))) begin
        tmp_reg_190[30 : 0] <= tmp_fu_134_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg35_fsm_38) & (tmp_i_reg_182 == 1'b0))) begin
        x_assign_1_reg_195 <= grp_fu_119_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st81_fsm_44) & ~(strm_out_V_V_full_n == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st81_fsm_44) & ~(strm_out_V_V_full_n == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_126) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_152) begin
        ap_sig_cseq_ST_pp0_stg35_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg35_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_163) begin
        ap_sig_cseq_ST_pp0_stg36_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg36_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_177) begin
        ap_sig_cseq_ST_pp0_stg40_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg40_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_60) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_84) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_92) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st81_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (tmp_i_reg_182 == 1'b0))) begin
        p_i_phi_fu_84_p4 = tmp_reg_190;
    end else begin
        p_i_phi_fu_84_p4 = p_i_reg_81;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        strm_in_V_V_blk_n = strm_in_V_V_empty_n;
    end else begin
        strm_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_111) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(strm_in_V_V_empty_n == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0)))) begin
        strm_in_V_V_read = 1'b1;
    end else begin
        strm_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st81_fsm_44)) begin
        strm_out_V_V_blk_n = strm_out_V_V_full_n;
    end else begin
        strm_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st81_fsm_44) & ~(strm_out_V_V_full_n == 1'b0))) begin
        strm_out_V_V_write = 1'b1;
    end else begin
        strm_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_3) & (1'b1 == ap_reg_ppiten_pp0_it1) & (tmp_i_reg_182 == 1'b0))) begin
        x_pn_i_phi_fu_93_p4 = tmp_6_i_reg_207;
    end else begin
        x_pn_i_phi_fu_93_p4 = x_pn_i_reg_90;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_111) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(strm_in_V_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(strm_in_V_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_3 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~(tmp_i_fu_109_p2 == 1'b0) & ~(1'b1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_44;
            end
        end
        ap_ST_pp0_stg1_fsm_4 : begin
            ap_NS_fsm = ap_ST_pp0_stg2_fsm_5;
        end
        ap_ST_pp0_stg2_fsm_5 : begin
            ap_NS_fsm = ap_ST_pp0_stg3_fsm_6;
        end
        ap_ST_pp0_stg3_fsm_6 : begin
            ap_NS_fsm = ap_ST_pp0_stg4_fsm_7;
        end
        ap_ST_pp0_stg4_fsm_7 : begin
            ap_NS_fsm = ap_ST_pp0_stg5_fsm_8;
        end
        ap_ST_pp0_stg5_fsm_8 : begin
            ap_NS_fsm = ap_ST_pp0_stg6_fsm_9;
        end
        ap_ST_pp0_stg6_fsm_9 : begin
            ap_NS_fsm = ap_ST_pp0_stg7_fsm_10;
        end
        ap_ST_pp0_stg7_fsm_10 : begin
            ap_NS_fsm = ap_ST_pp0_stg8_fsm_11;
        end
        ap_ST_pp0_stg8_fsm_11 : begin
            ap_NS_fsm = ap_ST_pp0_stg9_fsm_12;
        end
        ap_ST_pp0_stg9_fsm_12 : begin
            ap_NS_fsm = ap_ST_pp0_stg10_fsm_13;
        end
        ap_ST_pp0_stg10_fsm_13 : begin
            ap_NS_fsm = ap_ST_pp0_stg11_fsm_14;
        end
        ap_ST_pp0_stg11_fsm_14 : begin
            ap_NS_fsm = ap_ST_pp0_stg12_fsm_15;
        end
        ap_ST_pp0_stg12_fsm_15 : begin
            ap_NS_fsm = ap_ST_pp0_stg13_fsm_16;
        end
        ap_ST_pp0_stg13_fsm_16 : begin
            ap_NS_fsm = ap_ST_pp0_stg14_fsm_17;
        end
        ap_ST_pp0_stg14_fsm_17 : begin
            ap_NS_fsm = ap_ST_pp0_stg15_fsm_18;
        end
        ap_ST_pp0_stg15_fsm_18 : begin
            ap_NS_fsm = ap_ST_pp0_stg16_fsm_19;
        end
        ap_ST_pp0_stg16_fsm_19 : begin
            ap_NS_fsm = ap_ST_pp0_stg17_fsm_20;
        end
        ap_ST_pp0_stg17_fsm_20 : begin
            ap_NS_fsm = ap_ST_pp0_stg18_fsm_21;
        end
        ap_ST_pp0_stg18_fsm_21 : begin
            ap_NS_fsm = ap_ST_pp0_stg19_fsm_22;
        end
        ap_ST_pp0_stg19_fsm_22 : begin
            ap_NS_fsm = ap_ST_pp0_stg20_fsm_23;
        end
        ap_ST_pp0_stg20_fsm_23 : begin
            ap_NS_fsm = ap_ST_pp0_stg21_fsm_24;
        end
        ap_ST_pp0_stg21_fsm_24 : begin
            ap_NS_fsm = ap_ST_pp0_stg22_fsm_25;
        end
        ap_ST_pp0_stg22_fsm_25 : begin
            ap_NS_fsm = ap_ST_pp0_stg23_fsm_26;
        end
        ap_ST_pp0_stg23_fsm_26 : begin
            ap_NS_fsm = ap_ST_pp0_stg24_fsm_27;
        end
        ap_ST_pp0_stg24_fsm_27 : begin
            ap_NS_fsm = ap_ST_pp0_stg25_fsm_28;
        end
        ap_ST_pp0_stg25_fsm_28 : begin
            ap_NS_fsm = ap_ST_pp0_stg26_fsm_29;
        end
        ap_ST_pp0_stg26_fsm_29 : begin
            ap_NS_fsm = ap_ST_pp0_stg27_fsm_30;
        end
        ap_ST_pp0_stg27_fsm_30 : begin
            ap_NS_fsm = ap_ST_pp0_stg28_fsm_31;
        end
        ap_ST_pp0_stg28_fsm_31 : begin
            ap_NS_fsm = ap_ST_pp0_stg29_fsm_32;
        end
        ap_ST_pp0_stg29_fsm_32 : begin
            ap_NS_fsm = ap_ST_pp0_stg30_fsm_33;
        end
        ap_ST_pp0_stg30_fsm_33 : begin
            ap_NS_fsm = ap_ST_pp0_stg31_fsm_34;
        end
        ap_ST_pp0_stg31_fsm_34 : begin
            ap_NS_fsm = ap_ST_pp0_stg32_fsm_35;
        end
        ap_ST_pp0_stg32_fsm_35 : begin
            ap_NS_fsm = ap_ST_pp0_stg33_fsm_36;
        end
        ap_ST_pp0_stg33_fsm_36 : begin
            ap_NS_fsm = ap_ST_pp0_stg34_fsm_37;
        end
        ap_ST_pp0_stg34_fsm_37 : begin
            ap_NS_fsm = ap_ST_pp0_stg35_fsm_38;
        end
        ap_ST_pp0_stg35_fsm_38 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it1) & (1'b1 == ap_sig_cseq_ST_pp0_stg35_fsm_38) & ~(1'b1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_pp0_stg36_fsm_39;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_44;
            end
        end
        ap_ST_pp0_stg36_fsm_39 : begin
            ap_NS_fsm = ap_ST_pp0_stg37_fsm_40;
        end
        ap_ST_pp0_stg37_fsm_40 : begin
            ap_NS_fsm = ap_ST_pp0_stg38_fsm_41;
        end
        ap_ST_pp0_stg38_fsm_41 : begin
            ap_NS_fsm = ap_ST_pp0_stg39_fsm_42;
        end
        ap_ST_pp0_stg39_fsm_42 : begin
            ap_NS_fsm = ap_ST_pp0_stg40_fsm_43;
        end
        ap_ST_pp0_stg40_fsm_43 : begin
            ap_NS_fsm = ap_ST_pp0_stg0_fsm_3;
        end
        ap_ST_st81_fsm_44 : begin
            if (~(strm_out_V_V_full_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_44;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_111 = ((ap_start == 1'b0) | (strm_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_126 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_152 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_163 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_177 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_60 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_84 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_92 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign strm_out_V_V_din = tmp_V_fu_64;

assign tmp_1_fu_115_p1 = p_i_phi_fu_84_p4[0:0];

assign tmp_fu_134_p1 = y_assign_1_fu_124_p4;

assign tmp_i_fu_109_p2 = ((p_i_phi_fu_84_p4 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign y_assign_1_fu_124_p4 = {{p_i_phi_fu_84_p4[ap_const_lv32_1F : ap_const_lv32_1]}};

always @ (posedge ap_clk) begin
    tmp_reg_190[31] <= 1'b0;
end

endmodule //dut
